method: bayes
metric:
  name: eval/avg_mil_loss
  goal: minimize
parameters:
  dropout_p:
    distribution: constant
    value: 0.5
  epochs:
    distribution: int_uniform
    max: 200
    min: 50
  hdim:
    distribution: constant
    value: 8
  actor_learning_rate:
    distribution: log_uniform_values
    min: 1.0e-6
    max: 1.0e-3
  critic_learning_rate:
    distribution: constant
    value: 0
  learning_rate:
    distribution: constant
    value: 1.0e-6
  reg_coef:
    distribution: uniform
    min: 0.0
    max: 1.0
  batch_size:
    distribution: categorical
    values: [64, 128, 256]
  early_stopping_patience:
    distribution: constant
    value: 100
run_cap: 50

# Attention-based RL-MIL aggregated_subset MeanMLP 
# method: grid
# metric:
#   goal: minimize
#   name: eval/avg_mil_loss
# parameters:


# Attention-based RL-MIL aggregated_subset MaxMLP 
# method: grid
# metric:
#   goal: minimize
#   name: eval/avg_mil_loss
# parameters:


# Attention-based RL-MIL aggregated_subset Attention 
# method: grid
# metric:
#   goal: minimize
#   name: eval/avg_mil_loss
# parameters:



# Attention-based RL-MIL aggregated_subset repset 
# method: grid
# metric:
#   goal: minimize
#   name: eval/avg_mil_loss
# parameters:


# Attention-based RL-MIL full_subset MeanMLP 
# method: grid
# metric:
#   goal: minimize
#   name: eval/avg_mil_loss
# parameters:



# Attention-based RL-MIL full_subset MaxMLP 
# method: grid
# metric:
#   goal: minimize
#   name: eval/avg_mil_loss
# parameters:


# Attention-based RL-MIL full_subset Attention 
# method: grid
# metric:
#   goal: minimize
#   name: eval/avg_mil_loss
# parameters:


# Attention-based RL-MIL full_subset repset 
# method: grid
# metric:
#   goal: minimize
#   name: eval/avg_mil_loss
# parameters:
